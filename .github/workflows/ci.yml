name: CI/CD Pipeline

on:
  push:
    branches: [ "**" ]  # Trigger on all branches
  pull_request:
    branches: [ "**" ]  # Trigger on all branches

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true

jobs:
  build:
    name: Build and Validate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build plugin
      run: ./gradlew build --stacktrace

    - name: Run tests (if any)
      run: ./gradlew test --stacktrace
      continue-on-error: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          build/libs/*.jar
          build/distributions/*.zip

  example-test:
    name: Test Example Project
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Publish plugin to local repository
      run: ./gradlew publishToMavenLocal --stacktrace

    - name: Test example project
      working-directory: example
      run: |
        chmod +x ../gradlew
        # Test material symbols generation
        ../gradlew :composeApp:generateMaterialSymbols --stacktrace
        # Build the example project
        ../gradlew build --stacktrace

  validate-plugin:
    name: Validate Plugin
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Validate plugin tasks
      run: |
        ./gradlew tasks --all | grep -i material || echo "No material tasks found yet"
        ./gradlew publishToMavenLocal --stacktrace

    - name: Verify plugin publication
      run: |
        if [ -d ~/.m2/repository/io/github/kingsword09 ]; then
          echo "✅ Plugin published to local Maven repository"
          find ~/.m2/repository/io/github/kingsword09 -name "*.jar" | head -5
        else
          echo "❌ Plugin not found in local Maven repository"
          exit 1
        fi

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build, example-test, validate-plugin]
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore(release):')

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Extract version from commit message
      id: extract_version
      run: |
        COMMIT_MSG="${{ github.event.head_commit.message }}"
        VERSION=$(echo "$COMMIT_MSG" | grep -oP 'chore\(release\):\s*v\K[0-9]+\.[0-9]+\.[0-9]+')
        if [ -z "$VERSION" ]; then
          echo "No valid version found in commit message: $COMMIT_MSG"
          exit 1
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Update version in build files
      run: |
        VERSION=${{ steps.extract_version.outputs.version }}
        # Update version in build.gradle.kts
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" build.gradle.kts
        echo "Updated version to $VERSION"

    - name: Build release artifacts
      run: ./gradlew build publishToMavenLocal --stacktrace

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        release_name: Release v${{ steps.extract_version.outputs.version }}
        body: |
          ## SymbolCraft v${{ steps.extract_version.outputs.version }}

          A powerful Gradle plugin for generating Material Symbols icons on-demand in Kotlin Multiplatform projects.

          ### 🚀 Features
          - On-demand generation of Material Symbols icons
          - Smart caching with 7-day validity
          - Parallel downloads using Kotlin coroutines
          - Deterministic builds for Git-friendly output
          - Full Material Symbols style support
          - Compose Preview generation

          ### 📦 Installation
          ```kotlin
          plugins {
              id("io.github.kingsword09.symbolcraft") version "${{ steps.extract_version.outputs.version }}"
          }
          ```

          ### 📋 Changes
          - Automated release from commit: ${{ github.event.head_commit.message }}

          ### 📎 Assets
          - Plugin JAR: `symbolcraft-${{ steps.extract_version.outputs.version }}.jar`
          - Plugin distribution: `symbolcraft-${{ steps.extract_version.outputs.version }}.zip`
        draft: false
        prerelease: false

    - name: Upload JAR Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/libs/symbolcraft-${{ steps.extract_version.outputs.version }}.jar
        asset_name: symbolcraft-${{ steps.extract_version.outputs.version }}.jar
        asset_content_type: application/java-archive

    - name: Upload Distribution Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/distributions/symbolcraft-${{ steps.extract_version.outputs.version }}.zip
        asset_name: symbolcraft-${{ steps.extract_version.outputs.version }}.zip
        asset_content_type: application/zip

  publish-gradle-plugin:
    name: Publish to Gradle Plugin Portal
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore(release):')

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Extract version from commit message
      id: extract_version
      run: |
        COMMIT_MSG="${{ github.event.head_commit.message }}"
        VERSION=$(echo "$COMMIT_MSG" | grep -oP 'chore\(release\):\s*v\K[0-9]+\.[0-9]+\.[0-9]+')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Update version in build files
      run: |
        VERSION=${{ steps.extract_version.outputs.version }}
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" build.gradle.kts

    - name: Publish to Gradle Plugin Portal
      env:
        GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
        GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
      run: ./gradlew publishPlugins --stacktrace

  publish-maven-central:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore(release):')

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Extract version from commit message
      id: extract_version
      run: |
        COMMIT_MSG="${{ github.event.head_commit.message }}"
        VERSION=$(echo "$COMMIT_MSG" | grep -oP 'chore\(release\):\s*v\K[0-9]+\.[0-9]+\.[0-9]+')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Update version in build files
      run: |
        VERSION=${{ steps.extract_version.outputs.version }}
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" build.gradle.kts

    - name: Publish to Maven Central
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --stacktrace

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [publish-gradle-plugin, publish-maven-central]
    if: always() && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore(release):')

    steps:
    - name: Notify success
      if: needs.publish-gradle-plugin.result == 'success' && needs.publish-maven-central.result == 'success'
      run: |
        echo "🎉 SymbolCraft release completed successfully!"
        echo "✅ Plugin published to Gradle Plugin Portal"
        echo "✅ Plugin published to Maven Central"
        echo "🔗 Gradle Portal: https://plugins.gradle.org/plugin/io.github.kingsword09.symbolcraft"
        echo "🔗 Maven Central: https://central.sonatype.com/artifact/io.github.kingsword09/symbolcraft"

    - name: Notify partial success
      if: (needs.publish-gradle-plugin.result == 'success' && needs.publish-maven-central.result != 'success') || (needs.publish-gradle-plugin.result != 'success' && needs.publish-maven-central.result == 'success')
      run: |
        echo "⚠️ SymbolCraft release partially completed!"
        echo "Gradle Portal: ${{ needs.publish-gradle-plugin.result }}"
        echo "Maven Central: ${{ needs.publish-maven-central.result }}"

    - name: Notify failure
      if: needs.publish-gradle-plugin.result == 'failure' && needs.publish-maven-central.result == 'failure'
      run: |
        echo "❌ SymbolCraft release failed!"
        echo "🔍 Check the logs for details"
        echo "📋 Common issues: Gradle Portal credentials, Maven Central credentials, version conflicts"